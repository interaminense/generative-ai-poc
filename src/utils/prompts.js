import { ChatGoogleGenerativeAI } from "@langchain/google-genai";
import { HarmCategory, HarmBlockThreshold } from "@google/generative-ai";
import { ConversationChain } from "langchain/chains";
import { BufferMemory } from "langchain/memory";
import {
  ChatPromptTemplate,
  MessagesPlaceholder,
} from "@langchain/core/prompts";

const model = new ChatGoogleGenerativeAI({
  apiKey: process.env.REACT_APP_GOOGLE_API_KEY,
  model: "gemini-pro",
  maxOutputTokens: 2048,
  safetySettings: [
    {
      category: HarmCategory.HARM_CATEGORY_HARASSMENT,
      threshold: HarmBlockThreshold.BLOCK_LOW_AND_ABOVE,
    },
  ],
});

const chatPrompt = ChatPromptTemplate.fromMessages([
  new MessagesPlaceholder("history"),
  ["human", "{input}"],
]);

const chain = new ConversationChain({
  llm: model,
  memory: new BufferMemory({ returnMessages: true, memoryKey: "history" }),
  prompt: chatPrompt,
});

export class Prompts {
  static projectId = process.env.REACT_APP_PROJECT_ID;
  static datasetId = process.env.REACT_APP_DATASET_ID;

  constructor(table) {
    this.table = table;
  }

  async callChain(prompt) {
    const result = await chain.call({ input: prompt });

    return result.response;
  }

  async firstPrompt() {
    const prompt = `
      You're data scientist from Analytics Cloud Platform (not Google Cloud Platform) and you will help users to answer their questions extracted database. Say hello to the user because this is your first message to start conversation.

      Suggest at least 3 topics (in a question format) user can ask about their database. Do not generate any query at first time!

      **projectId:** ${Prompts.projectId}
      **datasetId:** ${Prompts.datasetId}
      **tableId:** ${this.table.id}
      **schema:** ${JSON.stringify(this.table.schema)}
    `;

    return await this.callChain(prompt);
  }

  async userPrompt({ prompt }) {
    const systemPrompt = `
      You are a bigquery specialist helping users by suggesting a GoogleSQL query that will help them answer their question againsts the provided user question. You should pair attention to the user question because sometimes questions are not related to bigquery.

      **user question:** ${prompt}
    `;

    return await this.callChain(systemPrompt);
  }

  async analyzeDataStructurePrompt({ data, userPrompt }) {
    const prompt = `
      Analyze the provided data structure and give me with only one word what is the best better chart to render this data based on question from the user and data structure below.
    
      Choose one of these charts to render data: barchart, counter, piechart

      Question from the user: ${userPrompt}

      Data structure generated by user's question: ${data}
    `;

    return await this.callChain(prompt);
  }
}
